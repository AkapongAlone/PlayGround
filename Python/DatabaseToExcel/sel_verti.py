# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Select_Data.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import *
from PyQt5.QtCore import *
from PyQt5.QtWidgets import (
    QWidget, QPushButton, QApplication, QGridLayout, QMessageBox, QMainWindow, QFrame)
import pyodbc
import sys
from PyQt5.QtWidgets import *
from openpyxl import Workbook, load_workbook
import easygui
from openpyxl.utils.cell import coordinate_from_string, column_index_from_string
from openpyxl.utils import get_column_letter
import xlwings as xl


class Choosepage_verti(QMainWindow):
    def __init__(self, MainWindow,  filename, start_colunm, end_row, start_row, start_colunm2, end_row2,
                 start_row2, start_colunm3, end_row3, start_row3, start_colunm4, end_row4,
                 start_row4, start_colunm5, end_row5,
                 start_row5,
                 textcom, Featname1, Featname2, Featname3, Featname4, Featname5,
                 StationName,  PartName, value, servername, datetime_start, datetime_end,interval,db,UID,PWD):
        super().__init__()
        try : 
            self.conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server};SERVER=' +
                                  servername+'; DATABASE='+db+';trusted_connection=yes;' )
            self.cursor = self.conn.cursor()
            
            
        except:
            self.conn = pyodbc.connect('DRIVER={ODBC Driver 17 for SQL Server}; SERVER='+servername+'; DATABASE='+db+';UID='+UID+';PWD='+PWD)
            
            self.cursor = self.conn.cursor()
            self.cursor = self.conn.cursor()
        self.Featname1 = Featname1
        self.Featname2 = Featname2
        self.Featname3 = Featname3
        self.Featname4 = Featname4
        self.Featname5 = Featname5
        self.StationName = StationName
        
        self.PartName = PartName
        self.timeselect = value
        self.filename = filename
        self.start_colunm = start_colunm
        self.end_row = end_row
        self.start_row = start_row

        self.start_colunm2 = start_colunm2
        self.end_row2 = end_row2
        self.start_row2 = start_row2

        self.start_colunm3 = start_colunm3
        self.end_row3 = end_row3
        self.start_row3 = start_row3

        self.start_colunm4 = start_colunm4
        self.end_row4 = end_row4
        self.start_row4 = start_row4

        self.start_colunm5 = start_colunm5
        self.end_row5 = end_row5
        self.start_row5 = start_row5
        self.textcom = textcom
        
        self.datetime_start = datetime_start
        self.datetime_end = datetime_end
        self.interval=interval
        self.setupUi(MainWindow)



    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1062, 566)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icon/logo.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("#frame {    \n"
"    background-color: rgb(251, 251, 251);\n"
"}\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout_6.setContentsMargins(0, 11, 0, 11)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.label = QtWidgets.QLabel(self.frame)
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(14)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout_6.addWidget(self.label)
        self.widget_11 = QtWidgets.QWidget(self.frame)
        self.widget_11.setObjectName("widget_11")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget_11)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget_6 = QtWidgets.QWidget(self.widget_11)
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label_2 = QtWidgets.QLabel(self.widget_6)
        self.label_2.setMinimumSize(QtCore.QSize(180, 30))
        self.label_2.setMaximumSize(QtCore.QSize(180, 30))
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(14)
        self.label_2.setFont(font)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        self.scrollArea = QtWidgets.QScrollArea(self.widget_6)
        self.scrollArea.setMinimumSize(QtCore.QSize(180, 350))
        self.scrollArea.setMaximumSize(QtCore.QSize(180, 16777215))
        self.scrollArea.setStyleSheet("background : ")
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 178, 387))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.widget = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        self.widget.setObjectName("widget")
        self.gridLayout = QtWidgets.QGridLayout(self.widget)
        self.gridLayout.setObjectName("gridLayout")
        self.horizontalLayout_4.addWidget(self.widget)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout.addWidget(self.scrollArea)
        self.horizontalLayout.addWidget(self.widget_6)
        self.widget_7 = QtWidgets.QWidget(self.widget_11)
        self.widget_7.setObjectName("widget_7")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget_7)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.widget_7)
        self.label_3.setMinimumSize(QtCore.QSize(180, 30))
        self.label_3.setMaximumSize(QtCore.QSize(180, 30))
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(14)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_2.addWidget(self.label_3)
        self.scrollArea_2 = QtWidgets.QScrollArea(self.widget_7)
        self.scrollArea_2.setMinimumSize(QtCore.QSize(180, 350))
        self.scrollArea_2.setMaximumSize(QtCore.QSize(180, 16777215))
        self.scrollArea_2.setStyleSheet("background : ")
        self.scrollArea_2.setWidgetResizable(True)
        self.scrollArea_2.setObjectName("scrollArea_2")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 178, 387))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents_2)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.widget_2 = QtWidgets.QWidget(self.scrollAreaWidgetContents_2)
        self.widget_2.setObjectName("widget_2")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.widget_2)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_5.addWidget(self.widget_2)
        self.scrollArea_2.setWidget(self.scrollAreaWidgetContents_2)
        self.verticalLayout_2.addWidget(self.scrollArea_2)
        self.horizontalLayout.addWidget(self.widget_7)
        self.widget_8 = QtWidgets.QWidget(self.widget_11)
        self.widget_8.setObjectName("widget_8")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget_8)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.widget_8)
        self.label_4.setMinimumSize(QtCore.QSize(180, 30))
        self.label_4.setMaximumSize(QtCore.QSize(180, 30))
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.verticalLayout_3.addWidget(self.label_4)
        self.scrollArea_3 = QtWidgets.QScrollArea(self.widget_8)
        self.scrollArea_3.setMinimumSize(QtCore.QSize(180, 350))
        self.scrollArea_3.setMaximumSize(QtCore.QSize(180, 16777215))
        self.scrollArea_3.setStyleSheet("background : ")
        self.scrollArea_3.setWidgetResizable(True)
        self.scrollArea_3.setObjectName("scrollArea_3")
        self.scrollAreaWidgetContents_3 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_3.setGeometry(QtCore.QRect(0, 0, 178, 387))
        self.scrollAreaWidgetContents_3.setObjectName("scrollAreaWidgetContents_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents_3)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.widget_3 = QtWidgets.QWidget(self.scrollAreaWidgetContents_3)
        self.widget_3.setObjectName("widget_3")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.widget_3)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.horizontalLayout_6.addWidget(self.widget_3)
        self.scrollArea_3.setWidget(self.scrollAreaWidgetContents_3)
        self.verticalLayout_3.addWidget(self.scrollArea_3)
        self.horizontalLayout.addWidget(self.widget_8)
        self.widget_9 = QtWidgets.QWidget(self.widget_11)
        self.widget_9.setObjectName("widget_9")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget_9)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.label_5 = QtWidgets.QLabel(self.widget_9)
        self.label_5.setMinimumSize(QtCore.QSize(180, 30))
        self.label_5.setMaximumSize(QtCore.QSize(180, 30))
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(14)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.verticalLayout_4.addWidget(self.label_5)
        self.scrollArea_4 = QtWidgets.QScrollArea(self.widget_9)
        self.scrollArea_4.setMinimumSize(QtCore.QSize(180, 350))
        self.scrollArea_4.setMaximumSize(QtCore.QSize(180, 16777215))
        self.scrollArea_4.setStyleSheet("background : ")
        self.scrollArea_4.setWidgetResizable(True)
        self.scrollArea_4.setObjectName("scrollArea_4")
        self.scrollAreaWidgetContents_4 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_4.setGeometry(QtCore.QRect(0, 0, 178, 387))
        self.scrollAreaWidgetContents_4.setObjectName("scrollAreaWidgetContents_4")
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents_4)
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.widget_4 = QtWidgets.QWidget(self.scrollAreaWidgetContents_4)
        self.widget_4.setObjectName("widget_4")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.horizontalLayout_7.addWidget(self.widget_4)
        self.scrollArea_4.setWidget(self.scrollAreaWidgetContents_4)
        self.verticalLayout_4.addWidget(self.scrollArea_4)
        self.horizontalLayout.addWidget(self.widget_9)
        self.widget_10 = QtWidgets.QWidget(self.widget_11)
        self.widget_10.setObjectName("widget_10")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget_10)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label_6 = QtWidgets.QLabel(self.widget_10)
        self.label_6.setMinimumSize(QtCore.QSize(180, 30))
        self.label_6.setMaximumSize(QtCore.QSize(180, 30))
        
        self.label_2.setText(self.Featname1)
        self.label_3.setText(self.Featname2)
        self.label_4.setText(self.Featname3)
        self.label_5.setText(self.Featname4)
        self.label_6.setText(self.Featname5)
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(14)
        self.label_6.setFont(font)
        self.label_6.setAlignment(QtCore.Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.verticalLayout_5.addWidget(self.label_6)
        self.scrollArea_5 = QtWidgets.QScrollArea(self.widget_10)
        self.scrollArea_5.setMinimumSize(QtCore.QSize(180, 350))
        self.scrollArea_5.setMaximumSize(QtCore.QSize(180, 16777215))
        self.scrollArea_5.setStyleSheet("background : ")
        self.scrollArea_5.setWidgetResizable(True)
        self.scrollArea_5.setObjectName("scrollArea_5")
        self.scrollAreaWidgetContents_5 = QtWidgets.QWidget()
        self.scrollAreaWidgetContents_5.setGeometry(QtCore.QRect(0, 0, 178, 387))
        self.scrollAreaWidgetContents_5.setObjectName("scrollAreaWidgetContents_5")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.scrollAreaWidgetContents_5)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.widget_5 = QtWidgets.QWidget(self.scrollAreaWidgetContents_5)
        self.widget_5.setObjectName("widget_5")
        self.gridLayout_5 = QtWidgets.QGridLayout(self.widget_5)
        self.gridLayout_5.setObjectName("gridLayout_5")
        self.horizontalLayout_8.addWidget(self.widget_5)
        self.scrollArea_5.setWidget(self.scrollAreaWidgetContents_5)
        self.verticalLayout_5.addWidget(self.scrollArea_5)
        self.horizontalLayout.addWidget(self.widget_10)
        self.verticalLayout_6.addWidget(self.widget_11)
        self.ButtonTool = QtWidgets.QPushButton(self.frame)
        self.ButtonTool.setMinimumSize(QtCore.QSize(120, 30))
        self.ButtonTool.setMaximumSize(QtCore.QSize(120, 30))
        font = QtGui.QFont()
        font.setFamily("Sarabun")
        font.setPointSize(12)
        self.ButtonTool.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icon/icons8-paper-plane-50.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.ButtonTool.setIcon(icon1)
        self.ButtonTool.setObjectName("ButtonTool")
        self.verticalLayout_6.addWidget(self.ButtonTool, 0, QtCore.Qt.AlignHCenter)
        self.verticalLayout_7.addWidget(self.frame)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.checks = []
        self.checks2 = []
        self.checks3 = []
        self.checks4 = []
        self.checks5 = []
        self.gencheck()
        self.waitbut()

    def gencheck(self):  # ฟังชั่นไว้เจ็นค่าจากdatabase มาเป็นcheck box


        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
          WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND  CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)  ;""", (self.Featname1, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        value1 = self.cursor.fetchall()
        value1 = [value1[0] for value1 in value1[0:len(value1)]]
        self.value1 = value1  # ประกาศให้ทั้งคลาสเรียกใช้ค่าvalueทั้งหมดได้

        for i, v in enumerate(value1):  # i คือลำดับ v คือค่า
            value1[i] = QtWidgets.QCheckBox(str(v))
            self.gridLayout.addWidget(value1[i], i, 0)
            self.checks.append(str(value1[i]))  # เพิ่มค่าลงในลิส

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
          WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)        ;""", (self.Featname2, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        value2 = self.cursor.fetchall()
        value2 = [value2[0] for value2 in value2[0:len(value2)]]
        self.value2 = value2
        for i, v in enumerate(value2):
            value2[i] = QtWidgets.QCheckBox(str(v))
            self.gridLayout_2.addWidget(value2[i], i, 0)
            self.checks2.append(str(value2[i]))

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
          WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)  ;""", (self.Featname3, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        value3 = self.cursor.fetchall()
        value3 = [value3[0] for value3 in value3[0:len(value3)]]
        self.value3 = value3
        for i, v in enumerate(value3):
            value3[i] = QtWidgets.QCheckBox(str(v))
            self.gridLayout_3.addWidget(value3[i], i, 0)
            self.checks3.append(str(value3[i]))

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
          WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)  ;""", (self.Featname4, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        value4 = self.cursor.fetchall()
        value4 = [value4[0] for value4 in value4[0:len(value4)]]
        self.value4 = value4
        for i, v in enumerate(value4):
            value4[i] = QtWidgets.QCheckBox(str(v))
            self.gridLayout_4.addWidget(value4[i], i, 0)
            self.checks4.append(str(value4[i]))

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
         WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)   ;""", (self.Featname5, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        value5 = self.cursor.fetchall()
        value5 = [value5[0] for value5 in value5[0:len(value5)]]
        self.value5 = value5
        for i, v in enumerate(value5):
            value5[i] = QtWidgets.QCheckBox(str(v))
            self.gridLayout_5.addWidget(value5[i], i, 0)
            self.checks5.append(str(value5[i]))

    def waitbut(self):
        self.ButtonTool.clicked.connect(self.run)

    def run(self):
        
        select = []  # เก็บตัวที่เลือก
        select2 = []
        select3 = []
        select4 = []
        select5 = []
        wb = xl.Book(self.filename)
        ws = wb.sheets[self.textcom]
        
        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
        WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)   ;""", (self.Featname1, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        valuef = self.cursor.fetchall()
        valuef = [valuef[0] for valuef in valuef[0:len(valuef)]]
        startcol =  self.start_colunm
        startrow = self.start_row
        startrow2 = self.start_row2
        startrow3= self.start_row3
        startrow4 = self.start_row4
        startrow5 = self.start_row5
        endrow =  self.end_row
        startcol2 =  self.start_colunm2
        endrow2 =  self.end_row2
        startcol3 =  self.start_colunm3
        endrow3 =  self.end_row3
        startcol4 =  self.start_colunm4
        endrow4 =  self.end_row4
        startcol5 =  self.start_colunm5
        endrow5 =  self.end_row5
        interval=self.interval
        # row2=self.start_colunm2
        print(int(endrow)-int(startrow)+1)
        ndata = int(endrow)-int(startrow)+1
        ndata2 = int(endrow2)-int(startrow2)+1
        ndata3 = int(endrow3)-int(startrow3)+1
        ndata4 = int(endrow4)-int(startrow4)+1
        ndata5 = int(endrow5)-int(startrow5)+1
        list_data = []
        list_data.append(ndata)
        list_data.append(ndata2)
        list_data.append(ndata3)
        list_data.append(ndata4)
        list_data.append(ndata5)
        list_name = []
        list_name.append(self.Featname1)
        list_name.append(self.Featname2)
        list_name.append(self.Featname3)
        list_name.append(self.Featname4)
        list_name.append(self.Featname5)
        for i, v in enumerate(self.value1):
            if self.value1[i].isChecked():  # เลือกค่าที่ติ๊กไว้
                select.append(valuef[i])  # ใส่ลงในลิส

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
        WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN ? AND ?     ;""", (self.Featname2, self.StationName,  self.PartName, self.datetime_start, self.datetime_end))
        valuef = self.cursor.fetchall()
        valuef = [valuef[0] for valuef in valuef[0:len(valuef)]]
        for i, v in enumerate(self.value2):
            if self.value2[i].isChecked():
                select2.append(valuef[i])

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
        WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)   ;""", (self.Featname3, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        valuef = self.cursor.fetchall()
        valuef = [valuef[0] for valuef in valuef[0:len(valuef)]]
        for i, v in enumerate(self.value3):
            if self.value3[i].isChecked():
                select3.append(valuef[i])

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
        WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)   ;""", (self.Featname4, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        valuef = self.cursor.fetchall()
        valuef = [valuef[0] for valuef in valuef[0:len(valuef)]]
        for i, v in enumerate(self.value4):
            if self.value4[i].isChecked():
                select4.append(valuef[i])

        self.cursor.execute("""SELECT [Value]
        FROM [BigTable]
        WHERE [FeatureName] =? AND [StationName]=? AND [PartName]=? AND CAST(ObsTimestamp AS DATETIME) BETWEEN CONVERT(datetime,?) AND CONVERT(datetime,?)   ;""", (self.Featname5, self.StationName,  self.PartName, str(self.datetime_start), str(self.datetime_end)))
        valuef = self.cursor.fetchall()
        valuef = [valuef[0] for valuef in valuef[0:len(valuef)]]
        for i, v in enumerate(self.value5):
            if self.value5[i].isChecked():
                select5.append(valuef[i])

##################################จะเช็คว่าจำนวกข้อมูลที่เลือกมากับที่กำหนดไว้ตรงไหม###########################
        print(list_data)
        list_check = []
        list_check.append(select)
        list_check.append(select2)
        list_check.append(select3)
        list_check.append(select4)
        list_check.append(select5)
        list_check2 = []
        check_error = True
        for v, x in enumerate(list_check):
            if len(x) != 0:
                y = list_data[v]
                if len(x) != y:
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Information)
                    msg.setText("จำนวนข้อมูลของแถว "+" "+str(
                        list_name[v])+" "+"ที่เลือกไม่ตรงกับข้อมูลที่ต้องบันทึก ข้อมูลที่ต้องการคือ "+str(y)+"จำนวนที่เลือกคือ "+str(len(x)))
                    msg.setStandardButtons(QMessageBox.Ok)
                    msg.setWindowTitle("Error")
                    retval = msg.exec_()
                    check_error = False
                else:
                    list_check2.append(x)

        if len(list_check2) != 0:
            for y in list_check2:
                if y == select:
                    for t in range(0, len(select)):
                        try:
                            ws.cells( startrow + t*interval,
                                      self.start_colunm).value = str(select[t])
                        except:
                            msg = QMessageBox()
                            msg.setIcon(QMessageBox.Information)
                            msg.setText(
                                "เกิดข้อผิดพลาด กรุณาเช็ค Colunm หรือ Row")
                            msg.setWindowTitle("Error")
                            msg.setStandardButtons(QMessageBox.Ok)
                            retval = msg.exec_()
                            self.excit()
                            check_error = 0
                            break
                elif y == select2:
                    for t in range(0, len(select2)):
                        try:
                            ws.cells(self.start_row2 + t*interval, self.start_colunm2
                                    ).value = str(select2[t])
                        except:
                            msg = QMessageBox()
                            msg.setIcon(QMessageBox.Information)
                            msg.setText(
                                "เกิดข้อผิดพลาด กรุณาเช็ค Colunm หรือ Row")
                            msg.setWindowTitle("Error")
                            msg.setStandardButtons(QMessageBox.Ok)
                            retval = msg.exec_()
                            self.excit()
                            check_error = 0
                            break
                elif y == select3:
                    for t in range(0, len(select3)):
                        try:
                            ws.cells(
                                self.start_row3 + t*interval, self.start_colunm3).value = str(select3[t])
                        except:
                            msg = QMessageBox()
                            msg.setIcon(QMessageBox.Information)
                            msg.setText(
                                "เกิดข้อผิดพลาด กรุณาเช็ค Colunm หรือ Row")
                            msg.setWindowTitle("Error")
                            msg.setStandardButtons(QMessageBox.Ok)
                            retval = msg.exec_()
                            self.excit()
                            check_error = 0
                            break
                elif y == select4:
                    for t in range(0, len(select4)):
                        try:
                            ws.cells(
                                self.start_row4 + t*interval, self.start_colunm4).value = str(select4[t])
                        except:
                            msg = QMessageBox()
                            msg.setIcon(QMessageBox.Information)
                            msg.setText(
                                "เกิดข้อผิดพลาด กรุณาเช็ค Colunm หรือ Row")
                            msg.setWindowTitle("Error")
                            msg.setStandardButtons(QMessageBox.Ok)
                            retval = msg.exec_()
                            self.excit()
                            check_error = 0
                            break
                elif y == select5:
                    for t in range(0, len(select5)):
                        try:
                            ws.cells(
                                self.start_row5 + t*interval, self.start_colunm5).value = str(select5[t])
                        except:
                            msg = QMessageBox()
                            msg.setIcon(QMessageBox.Information)
                            msg.setText(
                                "เกิดข้อผิดพลาด กรุณาเช็ค Colunm หรือ Row")
                            msg.setWindowTitle("Error")
                            msg.setStandardButtons(QMessageBox.Ok)
                            retval = msg.exec_()
                            self.excit()
                            check_error = 0
                            break
            # try:
                if check_error == False:
                    self.excit()
                else:
                    wb.save(self.filename)
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Information)
                    msg.setText("successful")
                    msg.setStandardButtons(QMessageBox.Ok)
                    msg.setWindowTitle("Success")
                    retval = msg.exec_()
            # except:
            #     msg = QMessageBox()
            #     msg.setIcon(QMessageBox.Information)
            #     msg.setText("Error")
            #     msg.setWindowTitle("Error")
            #     msg.setStandardButtons(QMessageBox.Ok)
            #     retval = msg.exec_()

#####################################คอนเซปคือถ้าค่าที่เลือกไม่เท่ากับ0(แปลว่ามีการเลือกมา)ก็ให้เช็คที่จะตัวว่าเลือกมาตรงไหม########################

    def excit(self):
        self.close()

        # else:
        #     msg = QMessageBox()
        #     msg.setIcon(QMessageBox.Information)
        #     msg.setText("จำนวนข้อมูลที่เลือกไม่ตรงกับข้อมูลที่ต้องบันทึก ข้อมูลที่ต้องการคือ "+str(ndata)+"จำนวนที่เลือกคือ "+str(len(select)))
        #     msg.setStandardButtons(QMessageBox.Ok )
        #     retval = msg.exec_()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Select Data"))
        self.label.setText(_translate("MainWindow", "เลือกข้อมูลที่ต้องการ"))
    
        self.ButtonTool.setText(_translate("MainWindow", "ยืนยัน"))
